{"version":3,"file":"togglebutton.js","sourceRoot":"","sources":["togglebutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,AfterViewInit,ViewChild,ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const TOGGLEBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ToggleButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-toggleButton',\n    template: `\n        <div [ngClass]=\"{'ui-button ui-togglebutton ui-widget ui-state-default ui-corner-all': true, 'ui-button-text-only': (!onIcon&&!offIcon), 'ui-button-text-icon-left': (onIcon&&offIcon),\n                'ui-state-active': checked,'ui-state-focus': focus, 'ui-state-hover': hover&&!disabled, 'ui-state-disabled': disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\" \n                (click)=\"toggle($event)\" (mouseenter)=\"hover=true\" (mouseleave)=\"hover=false\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #checkbox type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\n            </div>\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"getIconClass()\"></span>\n            <span class=\"ui-button-text ui-unselectable-text\">{{checked ? onLabel : offLabel}}</span>\n        </div>\n    `,\n    providers: [TOGGLEBUTTON_VALUE_ACCESSOR]\n})\nexport class ToggleButton implements ControlValueAccessor,AfterViewInit {\n\n    @Input() onLabel: string = 'Yes';\n\n    @Input() offLabel: string = 'No';\n\n    @Input() onIcon: string;\n\n    @Input() offIcon: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('checkbox') checkboxViewChild: ElementRef;\n    \n    checkbox: HTMLInputElement;\n    \n    checked: boolean = false;\n\n    focus: boolean = false;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    public hover: boolean;\n    \n    ngAfterViewInit() {\n        this.checkbox = <HTMLInputElement> this.checkboxViewChild.nativeElement;\n    }\n\n    getIconClass() {\n        let baseClass = 'ui-button-icon-left fa fa-fw';\n        return baseClass + ' ' + (this.checked ? this.onIcon : this.offIcon);\n    }\n    \n    toggle(event: Event) {\n        if(!this.disabled) {\n            this.checked = !this.checked;\n            this.onModelChange(this.checked);\n            this.onModelTouched();\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n            this.checkbox.focus();\n        }\n    }\n\n    onFocus() {\n        this.focus = true;\n    }\n    \n    onBlur() {\n        this.focus = false;\n        this.onModelTouched();\n    }\n    \n    writeValue(value: any) : void {\n        this.checked = value;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ToggleButton],\n    declarations: [ToggleButton]\n})\nexport class ToggleButtonModule { }"]}