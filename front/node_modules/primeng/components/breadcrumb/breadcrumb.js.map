{"version":3,"file":"breadcrumb.js","sourceRoot":"","sources":["breadcrumb.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8D,eAAe,CAAC,CAAA;AAC9E,uBAA2B,iBAAiB,CAAC,CAAA;AAG7C,uBAAqB,iBAAiB,CAAC,CAAA;AAqBvC;IAUI,oBAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAErC,8BAAS,GAAT,UAAU,KAAK,EAAE,IAAc;QAC3B,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACf,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,GAAG,IAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;QAC3B,CAAC;QAED,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACd,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,IAAI,mBAAY,EAAE,CAAC;gBACvC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,CAAC;YAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACnB,aAAa,EAAE,KAAK;gBACpB,IAAI,EAAE,IAAI;aACb,CAAC,CAAC;QACP,CAAC;QAED,EAAE,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1C,CAAC;IACL,CAAC;IAED,gCAAW,GAAX,UAAY,KAAK;QACb,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;IACL,CAAC;IAED,gCAAW,GAAX;QACI,EAAE,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACZ,GAAG,CAAA,CAAa,UAAU,EAAV,KAAA,IAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU,CAAC;gBAAvB,IAAI,IAAI,SAAA;gBACR,EAAE,CAAA,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;gBACpC,CAAC;aACJ;QACL,CAAC;IACL,CAAC;IAnDD;QAAC,YAAK,EAAE;;6CAAA;IAER;QAAC,YAAK,EAAE;;6CAAA;IAER;QAAC,YAAK,EAAE;;kDAAA;IAER;QAAC,YAAK,EAAE;;4CAAA;IA3BZ;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,+6BAeT;SACJ,CAAC;;kBAAA;IAwDF,iBAAC;AAAD,CAAC,AAvDD,IAuDC;AAvDY,kBAAU,aAuDtB,CAAA;AAOD;IAAA;IAAgC,CAAC;IALjC;QAAC,eAAQ,CAAC;YACN,OAAO,EAAE,CAAC,qBAAY,CAAC;YACvB,OAAO,EAAE,CAAC,UAAU,CAAC;YACrB,YAAY,EAAE,CAAC,UAAU,CAAC;SAC7B,CAAC;;wBAAA;IAC8B,uBAAC;AAAD,CAAC,AAAjC,IAAiC;AAApB,wBAAgB,mBAAI,CAAA","sourcesContent":["import {NgModule,Component,Input,OnDestroy,EventEmitter} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from '../common/api';\nimport {Location} from '@angular/common';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'p-breadcrumb',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-breadcrumb ui-widget ui-widget-header ui-helper-clearfix ui-corner-all'\">\n            <ul>\n                <li class=\"fa fa-home\" (click)=\"onHomeClick($event)\"></li>\n                <li class=\"ui-breadcrumb-chevron fa fa-chevron-right\" *ngIf=\"model\"></li>\n                <template ngFor let-item let-end=\"last\" [ngForOf]=\"model\">\n                    <li role=\"menuitem\">\n                        <a [href]=\"item.url||'#'\" class=\"ui-menuitem-link\" (click)=\"itemClick($event, item)\" [ngClass]=\"{'ui-state-disabled':item.disabled}\">\n                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </a>\n                    </li>\n                    <li class=\"ui-breadcrumb-chevron fa fa-chevron-right\" *ngIf=\"!end\"></li>\n                </template>\n            </ul>\n        </div>\n    `\n})\nexport class Breadcrumb implements OnDestroy {\n\n    @Input() model: MenuItem[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() home: MenuItem;\n    \n    constructor(public router: Router) {}\n    \n    itemClick(event, item: MenuItem)Â {\n        if(item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        if(!item.url||item.routerLink) {\n            event.preventDefault();\n        }\n        \n        if(item.command) {\n            if(!item.eventEmitter) {\n                item.eventEmitter = new EventEmitter();\n                item.eventEmitter.subscribe(item.command);\n            }\n            \n            item.eventEmitter.emit({\n                originalEvent: event,\n                item: item\n            });\n        }\n                \n        if(item.routerLink) {\n            this.router.navigate(item.routerLink);\n        }\n    }\n    \n    onHomeClick(event) {\n        if(this.home) {\n            this.itemClick(event, this.home);\n        }\n    }\n        \n    ngOnDestroy() {\n        if(this.model) {\n            for(let item of this.model) {\n                if(item.eventEmitter) {\n                    item.eventEmitter.unsubscribe();\n                }\n            }\n        }\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Breadcrumb],\n    declarations: [Breadcrumb]\n})\nexport class BreadcrumbModule { }"]}