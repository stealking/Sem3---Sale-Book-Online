{"version":3,"file":"paginator.js","sourceRoot":"","sources":["paginator.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAmF,eAAe,CAAC,CAAA;AACnG,uBAA2B,iBAAiB,CAAC,CAAA;AAiC7C;IAAA;QAEa,SAAI,GAAW,CAAC,CAAC;QAEjB,iBAAY,GAAW,CAAC,CAAC;QAExB,iBAAY,GAAsB,IAAI,mBAAY,EAAE,CAAC;QAUxD,kBAAa,GAAW,CAAC,CAAC;QAE1B,WAAM,GAAW,CAAC,CAAC;IAyG9B,CAAC;IArGY,sBAAI,mCAAY;aAAhB;YACL,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;aAED,UAAiB,GAAU;YACvB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOQ,sBAAI,4BAAK;aAAT;YACL,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAED,UAAU,GAAU;YAChB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,+BAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,8BAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IACtD,CAAC;IAED,gCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC;IACrD,CAAC;IAED,+CAA2B,GAA3B;QACI,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,EAAE,EACvC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;QAE1D,sDAAsD;QACtD,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EACzE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;QAE5D,qCAAqC;QACrC,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QAClD,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC;QAEnC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,mCAAe,GAAf;QACI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,UAAU,GAAG,IAAI,CAAC,2BAA2B,EAAE,EACnD,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,EACrB,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QAEpB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/B,CAAC;IACL,CAAC;IAED,8BAAU,GAAV,UAAW,CAAS,EAAE,KAAK;QACvB,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAE7B,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YAC3B,IAAI,KAAK,GAAG;gBACR,IAAI,EAAE,CAAC;gBACP,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,SAAS,EAAE,EAAE;aAChB,CAAC;YACF,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC;QAED,EAAE,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC;YACP,KAAK,CAAC,cAAc,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;IAED,2BAAO,GAAP;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,qCAAiB,GAAjB,UAAkB,KAAK;QACnB,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,oCAAgB,GAAhB,UAAiB,KAAK;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,oCAAgB,GAAhB,UAAiB,KAAK;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,GAAI,CAAC,EAAE,KAAK,CAAC,CAAC;IAChD,CAAC;IAED,oCAAgB,GAAhB,UAAiB,KAAK;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,+BAAW,GAAX,UAAY,KAAK;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAChE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAxHD;QAAC,YAAK,EAAE;;2CAAA;IAER;QAAC,YAAK,EAAE;;mDAAA;IAER;QAAC,aAAM,EAAE;;mDAAA;IAET;QAAC,YAAK,EAAE;;4CAAA;IAER;QAAC,YAAK,EAAE;;iDAAA;IAER;QAAC,YAAK,EAAE;;yDAAA;IAUR;QAAC,YAAK,EAAE;;iDAAA;IASR;QAAC,YAAK,EAAE;;0CAAA;IA9DZ;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,m2FA2BT;SACJ,CAAC;;iBAAA;IA4HF,gBAAC;AAAD,CAAC,AA3HD,IA2HC;AA3HY,iBAAS,YA2HrB,CAAA;AAOD;IAAA;IAA+B,CAAC;IALhC;QAAC,eAAQ,CAAC;YACN,OAAO,EAAE,CAAC,qBAAY,CAAC;YACvB,OAAO,EAAE,CAAC,SAAS,CAAC;YACpB,YAAY,EAAE,CAAC,SAAS,CAAC;SAC5B,CAAC;;uBAAA;IAC6B,sBAAC;AAAD,CAAC,AAAhC,IAAgC;AAAnB,uBAAe,kBAAI,CAAA","sourcesContent":["import {NgModule,Component,ElementRef,Input,Output,SimpleChange,EventEmitter} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n    selector: 'p-paginator',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-paginator ui-widget ui-widget-header ui-unselectable-text'\">\n            <a href=\"#\" #firstlink class=\"ui-paginator-first ui-paginator-element ui-state-default ui-corner-all\" (mouseenter)=\"hoveredItem = $event.target\" (mouseleave)=\"hoveredItem = null\"\n                        (click)=\"changePageToFirst($event)\" [ngClass]=\"{'ui-state-disabled':isFirstPage(),'ui-state-hover':(firstlink === hoveredItem && !isFirstPage())}\" [tabindex]=\"isFirstPage() ? -1 : null\">\n                <span class=\"fa fa-step-backward\"></span>\n            </a>\n            <a href=\"#\" #prevlink class=\"ui-paginator-prev ui-paginator-element ui-state-default ui-corner-all\" (mouseenter)=\"hoveredItem = $event.target\" (mouseleave)=\"hoveredItem = null\"\n                    (click)=\"changePageToPrev($event)\" [ngClass]=\"{'ui-state-disabled':isFirstPage(),'ui-state-hover':(prevlink === hoveredItem && !isFirstPage())}\" [tabindex]=\"isFirstPage() ? -1 : null\">\n                <span class=\"fa fa-backward\"></span>\n            </a>\n            <span class=\"ui-paginator-pages\">\n                <a href=\"#\" #plink *ngFor=\"let pageLink of pageLinks\" class=\"ui-paginator-page ui-paginator-element ui-state-default ui-corner-all\"\n                    (mouseenter)=\"hoveredItem = $event.target\" (mouseleave)=\"hoveredItem = null\" (click)=\"changePage(pageLink - 1, $event)\"\n                    [ngClass]=\"{'ui-state-hover':(plink === hoveredItem), 'ui-state-active': (pageLink-1 == getPage())}\">{{pageLink}}</a>\n            </span>\n            <a href=\"#\" #nextlink class=\"ui-paginator-next ui-paginator-element ui-state-default ui-corner-all\" (mouseenter)=\"hoveredItem = $event.target\" (mouseleave)=\"hoveredItem = null\"\n                    (click)=\"changePageToNext($event)\" [ngClass]=\"{'ui-state-disabled':isLastPage(),'ui-state-hover':(nextlink === hoveredItem  && !isLastPage())}\" [tabindex]=\"isLastPage() ? -1 : null\">\n                <span class=\"fa fa-forward\"></span>\n            </a>\n            <a href=\"#\" #lastlink class=\"ui-paginator-last ui-paginator-element ui-state-default ui-corner-all\" (mouseenter)=\"hoveredItem = $event.target\" (mouseleave)=\"hoveredItem = null\"\n                    (click)=\"changePageToLast($event)\" [ngClass]=\"{'ui-state-disabled':isLastPage(),'ui-state-hover':(lastlink === hoveredItem  && !isLastPage())}\" [tabindex]=\"isLastPage() ? -1 : null\">\n                <span class=\"fa fa-step-forward\"></span>\n            </a>\n            <select class=\"ui-paginator-rpp-options ui-widget ui-state-default\" *ngIf=\"rowsPerPageOptions\" (change)=\"onRppChange($event)\">\n                <option *ngFor=\"let opt of rowsPerPageOptions\" [value]=\"opt\" [selected]=\"rows == opt\">{{opt}}</option>\n            </select>\n        </div>\n    `\n})\nexport class Paginator {\n\n    @Input() rows: number = 0;\n\n    @Input() pageLinkSize: number = 5;\n\n    @Output() onPageChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() rowsPerPageOptions: number[];\n\n    public pageLinks: number[];\n\n    public _totalRecords: number = 0;\n    \n    public _first: number = 0;\n    \n    public hoveredItem: Element;\n\n    @Input() get totalRecords(): number {\n        return this._totalRecords;\n    }\n\n    set totalRecords(val:number) {\n        this._totalRecords = val;\n        this.updatePageLinks();\n    }\n    \n    @Input() get first(): number {\n        return this._first;\n    }\n\n    set first(val:number) {\n        this._first = val;\n        this.updatePageLinks();\n    }\n\n    isFirstPage() {\n        return this.getPage() === 0;\n    }\n\n    isLastPage() {\n        return this.getPage() === this.getPageCount() - 1;\n    }\n\n    getPageCount() {\n        return Math.ceil(this.totalRecords/this.rows)||1;\n    }\n\n    calculatePageLinkBoundaries() {\n        let numberOfPages = this.getPageCount(),\n        visiblePages = Math.min(this.pageLinkSize, numberOfPages);\n\n        //calculate range, keep current in middle if necessary\n        let start = Math.max(0, Math.ceil(this.getPage() - ((visiblePages) / 2))),\n        end = Math.min(numberOfPages - 1, start + visiblePages - 1);\n\n        //check when approaching to last page\n        var delta = this.pageLinkSize - (end - start + 1);\n        start = Math.max(0, start - delta);\n\n        return [start, end];\n    }\n\n    updatePageLinks() {\n        this.pageLinks = [];\n        let boundaries = this.calculatePageLinkBoundaries(),\n        start = boundaries[0],\n        end = boundaries[1];\n\n        for(let i = start; i <= end; i++) {\n            this.pageLinks.push(i + 1);\n        }\n    }\n\n    changePage(p :number, event) {\n        var pc = this.getPageCount();\n\n        if(p >= 0 && p < pc) {\n            this.first = this.rows * p;\n            var state = {\n                page: p,\n                first: this.first,\n                rows: this.rows,\n                pageCount: pc\n            };\n            this.updatePageLinks();\n\n            this.onPageChange.emit(state);\n        }\n        \n        if(event) {\n            event.preventDefault();\n        }\n    }\n    \n    getPage(): number {\n        return Math.floor(this.first / this.rows);\n    }\n\n    changePageToFirst(event) {\n        this.changePage(0, event);\n    }\n\n    changePageToPrev(event) {\n        this.changePage(this.getPage() - 1, event);\n    }\n\n    changePageToNext(event) {\n        this.changePage(this.getPage()  + 1, event);\n    }\n\n    changePageToLast(event) {\n        this.changePage(this.getPageCount() - 1, event);\n    }\n    \n    onRppChange(event) {\n        this.rows = this.rowsPerPageOptions[event.target.selectedIndex];\n        this.changePageToFirst(event);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Paginator],\n    declarations: [Paginator]\n})\nexport class PaginatorModule { }\n"]}